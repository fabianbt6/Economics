
rm(list = ls())

#libs======================
library(tidyverse)
library(scales)
library(readxl)
library(lubridate)
library(urca)
library(lmtest)
library(caret)
library(knitr)
library(gt)
library(pROC)
library(gtsummary)
library(cvms)
library(rpart)
library(rpart.plot)

#Load data====================
load(file = "Data/data_monthly.RData") 
load(file = "Data/dataset.RData") 

#Análisis Descriptivo================================

total_observaciones <- nrow(data_monthly)
mora_promedio <- mean(as.numeric(data_monthly$Mora))
mora_mensual <- data_monthly |>  
  group_by(Fecha_Reporte) |> 
  summarise(`% de Créditos en Mora General` = mean(Mora))

#Funciones=================
tabla_por_cat <- function(data1, data2, grupo, grupo_nombre, fecha1, var_dependiente, var_dependiente_nombre) {
  
  data2 <- data2 |> 
    mutate(Fecha = {{fecha1}}) |> 
    select(-{{fecha1}})

  data1 |>
    mutate(Fecha = {{fecha1}}) |>
    group_by(Fecha, {{grupo}}) |>
    summarise(`% de Créditos en Mora` = mean({{var_dependiente}})) |>
    pivot_wider(id_cols = Fecha,
                names_from = {{grupo}},
                values_from = `% de Créditos en Mora`) |>
    left_join(data2) |>
    pivot_longer(-Fecha, names_to = grupo_nombre,
                 values_to = var_dependiente_nombre) |>
    filter({{grupo_nombre}} != "NA") |>
    filter({{var_dependiente}} != 0) |> 
    mutate({{var_dependiente_nombre}} := round({{var_dependiente}} * 100, 2),
           linetype = ifelse({{grupo_nombre}} == "% de Créditos en Mora General", 
                             "Total", 
                             "Otra"))
}
class_logit <- function(model, data) {
  
  fitted_vals <- predict(model, data, "response")
  
  roc <- roc(data$Mora ~ fitted_vals)
  
  threshold <- coords(roc, "best", ret = "threshold")
  
  class <- ifelse(fitted_vals < threshold[[1]], FALSE, TRUE)
  
  mc_logit <- table(data$Mora, class)
  
  return(list("fitted_vals " = fitted_vals, 
              "Roc" = roc, 
              "threshold" = threshold, 
              "class" = class, 
              "mc_logit" = mc_logit))
}

ajuste <- function(MC) {
  pg <- sum(diag(MC)) / sum(MC)
  eg <- 1 - pg
  pp <- MC[2 , 2] / sum(MC[2, ])   
  pn <- MC[1 , 1] / sum(MC[1, ])
  fp <- 1 - pn
  fn <- 1 - pp  
  ap <- MC[2, 2] / sum(MC[, 2])
  an <- MC[1, 1] / sum(MC[, 1])  
  
  tibble("pivot" = 1,
         "Presición Global" = pg,
         "Error Global" = eg,
         "Presición Positiva" = pp,
         "Presición Negativa" = pn,
         "Falsos Positivos" = fp,
         "Falsos Negativos" = fn,
         "Asertividad Positiva" = ap,
         "Asertividad Negativa" = an
  ) |> 
    pivot_longer(-pivot, names_to = "Indicador", values_to = "Valor") |> 
    select(-pivot)
}  

cm_plot <- function(cm, lab1, lab2) {
  cm |>
    as_tibble() |>
    mutate(total = sum(n), 
           porc_total = n / total * 100) |>
    ggplot(aes(fill = n, 
               x = factor(Reference, level = c('TRUE', 'FALSE')),
               y = factor(Prediction, level = c('FALSE', 'TRUE'))))+
    geom_tile() + 
    geom_text(aes(label = n), size = 10) +
    geom_text(aes(label = paste(round(porc_total, 1), "%")),
              vjust = 2,
              size = 7) +
    scale_fill_gradient(low = "#d7f3fa", high = "#00AFD7") +
    labs(x = "Real", y = "Estimado") +
    scale_x_discrete(position = "top", 
                     labels = c(lab1,lab2)) +
    scale_y_discrete(labels = c(lab2,lab1)) + 
    theme(legend.position = "none",
          axis.title.x = element_text(size = 20),
          axis.title.y = element_text(size = 20),
          axis.text = element_text(size = 20))
  
}

# Tabla resumen de variable dependiente

str(data_monthly$Fecha_Reporte)

data_monthly |>
  group_by(Fecha_Reporte) |> 
  summarize(`Total de Créditos` = n(),
            `Créditos en Mora` = sum(Mora),
            `Créditos en Mora (% del Total)` = `Créditos en Mora` / `Total de Créditos`, 
            `Monto de la Cartera (en USD)` = sum(Saldo),
            `Monto de la Cartera en Mora (en USD)` = sum(ifelse(Mora == T, Saldo, 0)), 
            `Monto de la Cartera en Mora (% del Total)` = `Monto de la Cartera en Mora (en USD)` / `Monto de la Cartera (en USD)`  
            ) |>
  ungroup() |> 
  mutate(Fecha_Reporte = paste(month(Fecha_Reporte), year(Fecha_Reporte), sep = "-")) |>  
  pivot_longer(-Fecha_Reporte, names_to = "Indicador") |> 
  pivot_wider(id_cols = Indicador, names_from = Fecha_Reporte, values_from =  value) |> 
  gt(rowname_col = "Indicador") |>
  fmt_integer(rows = c("Total de Créditos", "Créditos en Mora"), 
              sep_mark = ",") |> 
  fmt_percent(rows = c("Créditos en Mora (% del Total)", 
                       "Monto de la Cartera en Mora (% del Total)"), 
              decimals = 1) |> 
  fmt_currency(rows = c("Monto de la Cartera (en USD)", 
                        "Monto de la Cartera en Mora (en USD)"), 
              decimals = 1) |> 
  opt_table_font(
    size = 10
  )

#% de Créditos en mora por mes
data_monthly |>  
  group_by(Fecha_Reporte) |> 
  summarise(`% de Créditos en Mora` = mean(Mora)) |>  
  ggplot(aes(x = Fecha_Reporte, y = `% de Créditos en Mora`)) +
  geom_bar(stat = "identity", fill = "#00AFD7") +
  geom_text(aes(x = Fecha_Reporte,
                y = `% de Créditos en Mora`,
                label = paste(round(`% de Créditos en Mora` * 100, 1) , "%")),
            position = "stack", 
            size = 5) + 
  labs(x = "Fecha") + 
  theme_gray(base_size = 18)

#% de Créditos en mora en ingreso independiente 
fecha_min <- min(data_monthly$Fecha_Reporte)
fecha_max <- max(data_monthly$Fecha_Reporte)

dataset |> 
  group_by(Fecha_Reporte) |> 
  filter(Ingreso_independiente == TRUE) |> 
  summarise(`% de Créditos en Mora` = mean(Mora)) |>
  left_join(mora_mensual) |> 
  ggplot(aes(x = Fecha_Reporte, y = `% de Créditos en Mora`)) +
  geom_bar(stat = "identity", fill = "#00AFD7") + 
  geom_line(aes(x = Fecha_Reporte, y = `% de Créditos en Mora General`), 
            size = 1, linetype = "dashed") + 
  geom_text(aes(x = Fecha_Reporte,
                y = `% de Créditos en Mora`,
                label = paste(round(`% de Créditos en Mora` * 100, 1) , "%")),
            position = "stack", 
            size = 5) + 
  geom_label(aes(x = Fecha_Reporte,
                y = `% de Créditos en Mora General`,
                label = paste(round(`% de Créditos en Mora General` * 100, 1) , "%")),
            position = "stack", 
            size = 5) +
  annotate("text", 
           x = fecha_min,
           y = mora_promedio + 0.01,
           label = paste("Mora Total Por Mes:"), 
           size = 4) + 
  labs(x = "Fecha") + 
  ggtitle("Porcentaje de Créditos en Mora en Ingreso Independiente") + 
  theme_gray(base_size = 18)

#Tabla de Mora por actividad economica
dataset |> 
  mutate(Fecha = Fecha_Reporte) |> 
  filter(
    Comerciante  == TRUE | 
      Profesional == TRUE |
      `Oficios Domésticos` == TRUE | 
      Agricultor == TRUE) |> 
  group_by(Fecha, ACTIVIDAD_ECONOMICA2) |> 
  summarise(`% de Créditos en Mora` = mean(Mora)) |> 
  pivot_wider(id_cols = Fecha, 
              names_from = ACTIVIDAD_ECONOMICA2, 
              values_from = `% de Créditos en Mora`) |> 
  ungroup() |> 
  gt() |>
  tab_header(
    title = "Cantidad de Créditos en Mora (% del Total)",
    subtitle = "Actividades Económicas Seleccionadas") |>  
  fmt_date(columns = Fecha, date_style = "yMMM") |>
  fmt_percent(columns = c("Oficios Domésticos", 
                          "Comerciante", 
                          "Profesional", 
                          "Agricultor")) |>
  tab_options(table.width = 15, 
              table.font.size = 15)

# Gráfico por producto

dataset |> 
  mutate(Fecha = Fecha_Reporte) |> 
  group_by(Fecha, `Línea de Crédito`) |> 
  summarise(`% de Créditos en Mora` = mean(Mora)) |>
  pivot_wider(id_cols = Fecha, 
              names_from = `Línea de Crédito`, 
              values_from = `% de Créditos en Mora`) |> 
  left_join(mora_mensual, by = c("Fecha" = "Fecha_Reporte")) |> 
  pivot_longer(-Fecha, names_to = "Producto", values_to = "Mora") |>
  filter(Producto != "NA") |> 
  filter(Mora != 0) |> 
  mutate(Mora = round(Mora * 100, 2), 
         linetype = ifelse(Producto == "% de Créditos en Mora General", "Total", "Otra")) |> 
  ggplot(aes(x = Fecha, y = Mora, colour = Producto)) +
  geom_line(size = 1, aes(linetype = linetype)) + 
  scale_color_manual(values = c(`% de Créditos en Mora General` = "#00AFD7",
                                `Construcción de Vivienda`= "#C4D600", 
                                `Lote y construcción de vivienda` = "#385988", 
                                `Vivienda usada` = "#FF671F", 
                                `Mejoramiento de Vivienda` = "#954F72", 
                                `Vivienda Nueva` = "#ff0000")) + 
  ggtitle("Porcentaje de Créditos en Mora por Producto")

#Tabla por producto

dataset |> 
  mutate(Fecha = Fecha_Reporte) |> 
  group_by(Fecha,  `Línea de Crédito`  ) |>
  filter(`Línea de Crédito` != "NA") |> 
  summarise(`% de Créditos en Mora` = mean(Mora)) |> 
  pivot_wider(id_cols = Fecha, 
              names_from = `Línea de Crédito`, 
              values_from = `% de Créditos en Mora`) |> 
  ungroup() |> 
  gt() |>
  tab_header(
    title = "Cantidad de Créditos en Mora (% del Total)") |> 
  fmt_date(columns = Fecha, date_style = "yMMM") |>
  fmt_percent(columns = c("Construcción de Vivienda", 
                          "Lote y construcción de vivienda", 
                          "Vivienda usada", 
                          "Mejoramiento de Vivienda", 
                          "Vivienda nueva"))

#Grafico por agencia
dataset |> 
  mutate(Fecha = Fecha_Reporte) |> 
  group_by(Fecha, Agencia) |> 
  summarise(`% de Créditos en Mora` = mean(Mora)) |>
  pivot_wider(id_cols = Fecha, 
              names_from = Agencia, 
              values_from = `% de Créditos en Mora`) |> 
  left_join(mora_mensual, by = c("Fecha" = "Fecha_Reporte")) |> 
  pivot_longer(-Fecha, names_to = "Agencia", values_to = "Mora") |>
  filter(Agencia != "NA") |> 
  filter(Mora != 0) |> 
  mutate(Mora = round(Mora * 100, 2), 
         linetype = ifelse(Agencia == "% de Créditos en Mora General", "Total", "Otra")) |> 
  ggplot(aes(x = Fecha, y = Mora, colour = Agencia)) +
  geom_line(size = 1, aes(linetype = linetype)) + 
  scale_color_manual(values = c(`% de Créditos en Mora General` = "#00AFD7",
                                `SANTA ANA`= "#C4D600", 
                                `SAN VICENTE` = "#385988", 
                                `CUSCATLAN` = "#FF671F", 
                                `SAN SALVADOR` = "#954F72", 
                                `SONSONATE` = "#ff0000",
                                `USULUTAN` = "#0563C1", 
                                `SAN MIGUEL` = "#44546A", 
                                `LA PAZ` = "#000000"
                                )
                     ) + 
  ggtitle("Porcentaje de Créditos en Mora por Agencia")


#Distribución por Grupo Agencia
dataset |>
  group_by(Fecha_Reporte, Agencia) |> 
  mutate(Total = n()) |> 
  ungroup() |> 
  select(Total, Agencia, `Mora (Categórica)`) |>
  group_by(Agencia, `Mora (Categórica)`) |> 
  summarise(Total_Tipo_Mora = n()) |>
  group_by(Agencia) |>
  mutate(Total_group = sum(Total_Tipo_Mora), 
         Porcentaje = Total_Tipo_Mora / Total_group) |> 
  filter(`Mora (Categórica)` == "En Mora") |> 
  ungroup() |> 
  ggplot(aes(x = reorder(Agencia, Porcentaje, decreasing = T), y = Porcentaje)) +
  geom_bar(stat = "identity", fill = "#00AFD7") +
  geom_text(aes(x = Agencia,
                y = Porcentaje,
                label = paste(round(Porcentaje * 100, 0) , "%")),
            position = "stack") +
  geom_hline(yintercept = mora$Mora, linetype = "dashed") +
  theme(
    axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1, size = 15),
    axis.title.x = element_blank()) 

#Distribución por Garantias
dataset |> 
  mutate(Fecha = Fecha_Reporte) |> 
  group_by(Fecha, Garantias) |> 
  summarise(`% de Créditos en Mora` = mean(Mora)) |>
  pivot_wider(id_cols = Fecha, 
              names_from = Garantias, 
              values_from = `% de Créditos en Mora`) |> 
  left_join(mora_mensual, by = c("Fecha" = "Fecha_Reporte")) |> 
  pivot_longer(-Fecha, names_to = "Garantias", values_to = "Mora") |>
  filter(Garantias != "NA") |> 
  filter(Mora != 0) |> 
  mutate(Mora = round(Mora * 100, 2), 
         linetype = ifelse(Garantias == "% de Créditos en Mora General", "Total", "Otra")) |> 
  ggplot(aes(x = Fecha, y = Mora, colour = Garantias)) +
  geom_line(size = 1, aes(linetype = linetype)) + 
  scale_color_manual(values = c(`% de Créditos en Mora General` = "#00AFD7",
                                `FIDUCIARIA`= "#C4D600", 
                                `HIPOTECARIA` = "#385988", 
                                `POR BUEN RECORD CREDITICIO` = "#FF671F"
                                )
                     ) + 
  ggtitle("Porcentaje de Créditos en Mora por Garantía")

#Gráfico por condición

dataset |> 
  mutate(Fecha = Fecha_Reporte) |> 
  group_by(Fecha, `Condición`) |> 
  summarise(`% de Créditos en Mora` = mean(Mora)) |>
  pivot_wider(id_cols = Fecha, 
              names_from = `Condición`, 
              values_from = `% de Créditos en Mora`) |> 
  left_join(mora_mensual, by = c("Fecha" = "Fecha_Reporte")) |> 
  pivot_longer(-Fecha, names_to = "Condición", values_to = "Mora") |>
  filter(`Condición` != "NA") |> 
  filter(Mora != 0) |> 
  mutate(Mora = round(Mora * 100, 2), 
         linetype = ifelse(`Condición` == "% de Créditos en Mora General", "Total", "Otra")) |> 
  ggplot(aes(x = Fecha, y = Mora, colour = `Condición`)) +
  geom_line(size = 1, aes(linetype = linetype)) + 
  scale_color_manual(values = c(`% de Créditos en Mora General` = "#00AFD7",
                                `EXTRA JUDICIAL`= "#C4D600", 
                                `NORMAL` = "#385988", 
                                `JUDICIAL` = "#FF671F"
                                )
                     ) + 
  ggtitle("Porcentaje de Créditos en Mora por Condición")

#Distribución por producto
dataset |>
  group_by(AñoCalendarioMes, `Línea de Crédito`) |> 
  mutate(Total = n()) |> 
  ungroup() |> 
  select(Total, `Línea de Crédito`, `Mora (Categórica)`) |>
  group_by(`Línea de Crédito`, `Mora (Categórica)`) |> 
  summarise(Total_Tipo_Mora = n()) |>
  group_by(`Línea de Crédito`) |>
  mutate(Total_group = sum(Total_Tipo_Mora), 
         Porcentaje = Total_Tipo_Mora / Total_group) |> 
  filter(`Mora (Categórica)` == "En Mora") |> 
  ungroup() |> 
  ggplot(aes(x = reorder(`Línea de Crédito`, Porcentaje, decreasing = T), y = Porcentaje)) +
  geom_col(stat = "identity", fill = "#00AFD7") +
  geom_text(aes(x = `Línea de Crédito`,
                y = Porcentaje,
                label = paste(round(Porcentaje * 100, 0) , "%")),
            position = "stack") +
  scale_x_discrete(labels = label_wrap(10)) +
  geom_hline(yintercept = mora$Mora, linetype = "dashed") +
  theme(
    axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1, size = 15),
    axis.title.x = element_blank())

#Distribución por Estado Civil

dataset |>
  group_by(Fecha_Reporte, ESTADO_CIVIL) |> 
  mutate(Total = n()) |> 
  ungroup() |> 
  select(Total, ESTADO_CIVIL, `Mora (Categórica)`) |>
  group_by(ESTADO_CIVIL, `Mora (Categórica)`) |> 
  summarise(Total_Tipo_Mora = n()) |>
  group_by(ESTADO_CIVIL) |>
  mutate(Total_group = sum(Total_Tipo_Mora), 
         Porcentaje = Total_Tipo_Mora / Total_group) |> 
  filter(`Mora (Categórica)` == "En Mora") |> 
  ungroup() |> 
  ggplot(aes(x = reorder(ESTADO_CIVIL, Porcentaje, decreasing = T), y = Porcentaje)) +
  geom_col(stat = "identity", fill = "#00AFD7") +
  geom_text(aes(x = ESTADO_CIVIL,
                y = Porcentaje,
                label = paste(round(Porcentaje * 100, 0) , "%")),
            position = "stack") +
  scale_x_discrete(labels = label_wrap(10)) +
  geom_hline(yintercept = mora$Mora, linetype = "dashed") +
  theme(
    axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1, size = 15),
    axis.title.x = element_blank())

#Distribución por Grupo Familiar

dataset |>
  filter(GRUPO_FAMILIAR < 70) |> 
  group_by(AñoCalendarioMes, GRUPO_FAMILIAR) |> 
  mutate(Total = n()) |> 
  ungroup() |> 
  select(Total, GRUPO_FAMILIAR, `Mora (Categórica)`) |>
  group_by(GRUPO_FAMILIAR, `Mora (Categórica)`) |> 
  summarise(Total_Tipo_Mora = n()) |>
  group_by(GRUPO_FAMILIAR) |>
  mutate(Total_group = sum(Total_Tipo_Mora), 
         Porcentaje = Total_Tipo_Mora / Total_group) |> 
  filter(`Mora (Categórica)` == "En Mora") |> 
  ungroup() |> 
  ggplot(aes(x = reorder(GRUPO_FAMILIAR, Porcentaje, decreasing = T), y = Porcentaje)) +
  geom_col(stat = "identity", fill = "#00AFD7") +
  geom_text(aes(x = GRUPO_FAMILIAR,
                y = Porcentaje,
                label = paste(round(Porcentaje * 100, 0) , "%")),
            position = "stack") +
  scale_x_discrete(labels = label_wrap(10)) +
  geom_hline(yintercept = mora$Mora, linetype = "dashed") +
  theme(
    axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1, size = 15),
    axis.title.x = element_blank())

#Distribución por Actividad Económica
dataset |>
  group_by(AñoCalendarioMes, ACTIVIDAD_ECONOMICA2) |> 
  mutate(Total = n()) |> 
  ungroup() |> 
  select(Total, ACTIVIDAD_ECONOMICA2, `Mora (Categórica)`) |>
  group_by(ACTIVIDAD_ECONOMICA2, `Mora (Categórica)`) |> 
  summarise(Total_Tipo_Mora = n()) |>
  group_by(ACTIVIDAD_ECONOMICA2) |>
  mutate(Total_ACTIVIDAD_ECONOMICA2 = sum(Total_Tipo_Mora), 
         Porcentaje = Total_Tipo_Mora / Total_ACTIVIDAD_ECONOMICA2) |> 
  filter(`Mora (Categórica)` == "En Mora") |> 
  ungroup() |> 
  mutate(Lim_Sup = quantile(Porcentaje, 0.90),
         Lim_Inf = quantile(Porcentaje, 0.10),
         Include = ifelse(Porcentaje > Lim_Sup | Porcentaje < Lim_Inf, TRUE, FALSE)) |>
  filter(Include == TRUE) |>
  ggplot(aes(x = reorder(ACTIVIDAD_ECONOMICA2, Porcentaje, decreasing = T), y = Porcentaje)) +
  geom_bar(stat = "identity", fill = "#00AFD7") +
  geom_text(aes(x = ACTIVIDAD_ECONOMICA2,
                y = Porcentaje,
                label = paste(round(Porcentaje * 100, 0) , "%")),
            position = "stack") +
  geom_hline(yintercept = mora$Mora, linetype = "dashed") +
  theme(
    axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1, size = 15),
    axis.title.x = element_blank()) 

#Distribución por Estado Civil

dataset |>
  group_by(AñoCalendarioMes, ESTADO_CIVIL) |> 
  mutate(Total = n()) |> 
  ungroup() |> 
  select(Total, ESTADO_CIVIL, `Mora (Categórica)`) |>
  group_by(ESTADO_CIVIL, `Mora (Categórica)`) |> 
  summarise(Total_Tipo_Mora = n()) |>
  group_by(ESTADO_CIVIL) |>
  mutate(Total_group = sum(Total_Tipo_Mora), 
         Porcentaje = Total_Tipo_Mora / Total_group) |> 
  filter(`Mora (Categórica)` == "En Mora") |> 
  ungroup() |> 
  ggplot(aes(x = reorder(ESTADO_CIVIL, Porcentaje, decreasing = T), y = Porcentaje)) +
  geom_col(stat = "identity", fill = "#00AFD7") +
  geom_text(aes(x = ESTADO_CIVIL,
                y = Porcentaje,
                label = paste(round(Porcentaje * 100, 0) , "%")),
            position = "stack") +
  scale_x_discrete(labels = label_wrap(10)) +
  geom_hline(yintercept = mora$Mora, linetype = "dashed") +
  theme(
    axis.text.x = element_text(angle = 90, vjust = .5, hjust = 1, size = 15),
    axis.title.x = element_blank())


#Modelo de Score============================



#Filtrar data por fechas======

data_202407 <- dataset |> 
  filter(Fecha_Reporte == "2024-07-01")

data_202408 <- dataset |> 
  filter(Fecha_Reporte == "2024-08-01")

data_202409 <- dataset |> 
  filter(Fecha_Reporte == "2024-09-01")

data_202410 <- dataset |> 
  filter(Fecha_Reporte == '2024-10-01') 

#Modelos

#Modelo logit===============================
covars <- paste(c("Agencia", 
                  "`Línea de Crédito`",
                  "Comerciante",
                  "Ingreso_independiente",
                  "Profesional",
                  "Agricultor",
                  "EDAD", 
                  "Plazo", 
                  "Plazo_Pendientes", 
                  "Garantias", 
                  "Salarios_mins"),
                collapse = "+")
formula_str <- paste("Mora_fact ~ ", covars) 

mod_logit <- glm( as.formula(formula_str) ,  
                 family = binomial(link = "logit"), 
                 data_202410)

summary(mod_logit)

pred_202407 <- class_logit(mod_logit, data_202407)$class

mean(pred_202407)

mod_logit <- glm( as.formula(formula_str) ,  
                  family = binomial(link = "logit"), 
                  data_202410)

summary(mod_logit)

pred_202407 <- class_logit(mod_logit, data_202407)$class

mean(pred_202407)

cm_202407 <- confusionMatrix(data = as_factor(pred_202407), 
                             reference = as_factor(data_202407$Mora), 
                             positive = "FALSE")

ajuste(cm_202407$table)

# Modelo de Score==================
covars_score <- paste(c("`Línea de Crédito`",
                        "Comerciante",
                        "Ingreso_independiente",
                        "Profesional",
                        "Agricultor",
                        "EDAD",
                        "Plazo",
                        "GRUPO_FAMILIAR",
                        "Garantias",
                        "Salarios_mins"),
                      collapse = "+")
formula_str_score <- paste("Mora_fact ~ ", covars_score) 

mod_logit_score <- glm( as.formula(formula_str_score),
                        family = binomial(link = "logit"),
                        data_202410)

summary(mod_logit_score)

pred_202407 <- class_logit(mod_logit_score, data_202407)$class

mean(pred_202407)

cm_202407 <- confusionMatrix(data = as_factor(pred_202407), 
                reference = as_factor(data_202407$Mora), 
                positive = "FALSE")

ajuste(cm_202407$table)

cm_plot(cm_202407$table, "Mora", "No Mora")

#Arbol===========  
  mod_arbol <- rpart(as.formula(formula_str_score) , data = data_202410)
  pred_arbol <- predict(mod_arbol, newdata = data_202407, type = "class")
  mc_arbol <- table(data_202407$Mora_fac, pred_arbol) 
  cm_202407 <- confusionMatrix(data = as_factor(pred_arbol), 
                               reference = as_factor(data_202407$Mora), 
                               positive = "FALSE")
  
  rpart.plot(mod_arbol, 
             type = 2, 
             extra = 4, 
             fallen.leaves = F, 
             cex = 0.70)

  rpart.plot(mod_arbol)  
  ajuste(cm_202407$table) |> 
    gt() |> 
    fmt_percent(
      columns = 'Valor',
      decimals = 1) |> 
    tab_options(
      table.font.size = 10, 
      column_labels.background.color  = '#00AFD7')
  
